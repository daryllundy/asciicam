name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: read

jobs:
  build-and-test:
    strategy:
      matrix:
        go-version: [ '1.23' ]
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules and build cache
        uses: actions/cache@v4.1.2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      - name: Setup OpenCV
        uses: ./.github/actions/setup-opencv

      - name: Verify OpenCV setup
        run: |
          echo "Checking OpenCV installation..."
          pkg-config --exists opencv4 && echo "opencv4 found" || echo "opencv4 not found"
          pkg-config --exists opencv && echo "opencv found" || echo "opencv not found"
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          echo "CGO_CFLAGS: $CGO_CFLAGS"
          echo "CGO_LDFLAGS: $CGO_LDFLAGS"

      - name: Download Go modules
        run: go mod download

      - name: Build
        env:
          CGO_ENABLED: "1"
        run: go build -v ./...

      - name: Test and Generate Coverage
        env:
          CGO_ENABLED: "1"
        run: |
          go test -v -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4.4.3
        with:
          name: coverage-report-${{ matrix.os }}-go${{ matrix.go-version }}-${{ github.run_id }}
          path: |
            coverage.out
            coverage.html
          retention-days: 30

  lint-strict:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version: '1.23'

      - name: Cache golangci-lint
        uses: actions/cache@v4.1.2
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-golangci-lint-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golangci-lint-

      - name: Setup OpenCV
        uses: ./.github/actions/setup-opencv

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6.1.1
        with:
          version: v1.61.0
          args: --out-format=colored-line-number
        env:
          CGO_ENABLED: "1"

  lint-soft:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup Go
        uses: actions/setup-go@v5.0.2
        with:
          go-version: '1.23'

      - name: Cache golangci-lint
        uses: actions/cache@v4.1.2
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-golangci-lint-soft-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golangci-lint-soft-
            ${{ runner.os }}-golangci-lint-

      - name: Setup OpenCV
        uses: ./.github/actions/setup-opencv

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6.1.1
        with:
          version: v1.61.0
          args: --config=.golangci-soft.yml --out-format=colored-line-number
        env:
          CGO_ENABLED: "1"
