name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    strategy:
      matrix:
        go-version: [ '1.22', '1.23' ]
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup OpenCV
        uses: ./.github/actions/setup-opencv

      - name: Download Go modules
        run: go mod download

      - name: Build
        env:
          CGO_ENABLED: "1"
        run: go build -v ./...

      - name: Test and Generate Coverage
        env:
          CGO_ENABLED: "1"
        run: |
          go test -v -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.os }}-go${{ matrix.go-version }}
          path: |
            coverage.out
            coverage.html
          retention-days: 30

  lint-strict:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Setup OpenCV
        uses: ./.github/actions/setup-opencv

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --out-format=colored-line-number
        env:
          CGO_ENABLED: "1"

  lint-soft:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Setup OpenCV
        uses: ./.github/actions/setup-opencv

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --config=.golangci-soft.yml --out-format=colored-line-number
        env:
          CGO_ENABLED: "1"
