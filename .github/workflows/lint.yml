name: Lint Go code

on:
  push:
    branches:
      - main      # remove or adjust if you want every branch
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  golangci-lint:
    name: Run golangci-lint
    runs-on: ubuntu-latest

    # ← enable CGO and tell it where to find OpenCV
    env:
      CGO_ENABLED: "1"

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install OpenCV dependencies
        run: |
          sudo apt-get update
          # Install complete OpenCV development packages
          sudo apt-get install -y \
            libopencv-dev \
            libopencv-contrib-dev \
            pkg-config \
            build-essential
          
          # Verify OpenCV installation and get version
          echo "Checking for OpenCV pkg-config files..."
          pkg-config --list-all | grep opencv || echo "No opencv packages found via pkg-config"
          ls /usr/lib/pkgconfig/ | grep opencv || echo "No opencv pkg-config files found"
          
          # Try both opencv4 and opencv and set environment
          if pkg-config --exists opencv4; then
            opencv_version=$(pkg-config --modversion opencv4)
            echo "Found OpenCV4 version: $opencv_version"
            echo "CGO_CFLAGS=$(pkg-config --cflags opencv4)" >> $GITHUB_ENV
            echo "CGO_LDFLAGS=$(pkg-config --libs opencv4)" >> $GITHUB_ENV
            echo "PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          elif pkg-config --exists opencv; then
            opencv_version=$(pkg-config --modversion opencv)
            echo "Found OpenCV version: $opencv_version"
            echo "CGO_CFLAGS=$(pkg-config --cflags opencv)" >> $GITHUB_ENV
            echo "CGO_LDFLAGS=$(pkg-config --libs opencv)" >> $GITHUB_ENV
            echo "PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          else
            echo "ERROR: No OpenCV pkg-config found"
            echo "Available pkg-config files:"
            ls /usr/lib/pkgconfig/ | grep -i cv || echo "No OpenCV-related files found"
            ls /usr/lib/x86_64-linux-gnu/pkgconfig/ | grep -i cv || echo "No OpenCV-related files found in arch-specific directory"
            exit 1
          fi

      - name: Download Go modules
        run: go mod download

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Format code with goimports
        run: |
          goimports -w .
          # Check if there are any changes after formatting
          if [ -n "$(git diff --name-only)" ]; then
            echo "The following files were reformatted:"
            git diff --name-only
            echo "Please run 'goimports -w .' locally and commit the changes"
            exit 1
          fi

      # ← optional cache to speed up future runs and quiet the 422 warning
      - name: Cache golangci-lint binary
        uses: actions/cache@v3
        with:
          path: |
            /home/runner/golangci-lint-*
          key: golangci-lint-${{ runner.os }}-${{ hashFiles('go.sum') }}
          restore-keys: golangci-lint-${{ runner.os }}-

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        env:
          CGO_ENABLED: "1"
          CGO_CFLAGS: ${{ env.CGO_CFLAGS }}
          CGO_LDFLAGS: ${{ env.CGO_LDFLAGS }}
          PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}
        with:
          args: --out-format=github-actions
